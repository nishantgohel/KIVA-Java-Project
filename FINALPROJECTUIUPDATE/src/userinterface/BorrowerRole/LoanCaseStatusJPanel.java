/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.BorrowerRole;

import business.Enterprise.Enterprise;
import business.Enterprise.KivaEnterprise;
import business.Loan.LendingInstance;
import business.Loan.Loan;
import business.Loan.RepaymentInstance;
import business.Person.Borrower;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author karan
 */
public class LoanCaseStatusJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer ;
    private KivaEnterprise business ;
    private Borrower borrower ;
    private Loan loan ;
    /**
     * Creates new form LoanCaseStatusJPanel
     */
    public LoanCaseStatusJPanel() {
        initComponents();
    }

    LoanCaseStatusJPanel(JPanel userProcessContainer, KivaEnterprise business, Borrower borrower) {
        initComponents();
        this.userProcessContainer = userProcessContainer ;
        this.business = business;
        this.borrower = borrower ;
        loan = business.getLoanDirectory().getBorrowerCurrentLoan(borrower);
        if(loan != null){
        populateTblLenderList();
        populateScreenLabels();
        populateTblRepaymentList(); }       
    
    else
    {lblStatus.setText("You have no approved loans");
    }}
   
    // If loan is null, it means borrower does not have any current loan
    public void populateTblLenderList(){
        DefaultTableModel model = (DefaultTableModel)tblLenderList.getModel();
        model.setRowCount(0);
        
        for(LendingInstance lendingInstance : loan.getLendingInstanceList()){
            Object[] row = new Object[2] ;
            row[0] = lendingInstance.getLender().getName();
            row[1] = lendingInstance.getAmount();
            model.addRow(row);
        }
    }
    
    public void populateScreenLabels(){
    
            int loanAmt = loan.getLoanCase().getLoanAmount();
            int lentAmt = loan.totalLentAmount();
            int repAmt = loan.totalRepayedAmount();
    
    int no = loan.getLendingInstanceList().size();
    lblLenderNo.setText("Loan powered by " + no + " lenders");
    
    if(loan.getLoanStatus() == Loan.LoanStatus.FundingRequired){
    lblPercent.setText("Loan 0% funded");
    lblFRStatus.setText("$0 funded. $" + loan.getLoanCase().getLoanAmount() + " to go.");}
    else if(loan.getLoanStatus() == Loan.LoanStatus.PartiallyFunded){
    int percent = (int) ((int)(((double)loan.totalLentAmount())/((double)loan.getLoanCase().getLoanAmount()))*100);
    lblPercent.setText("Loan "+ percent +"% funded"); 
    lblFRStatus.setText("$" + lentAmt + " funded. $" + (loanAmt-lentAmt) + " to go.");
    
    }else if(loan.getLoanStatus() == Loan.LoanStatus.FullyFunded){
    lblPercent.setText("Loan fully funded"); 
    lblFRStatus.setText("$0 repayed. $" + (lentAmt) + " to go.");    
    
    }else if(loan.getLoanStatus() == Loan.LoanStatus.PartiallyRepayed){
    int percent = (int) ((int)(((double)loan.totalRepayedAmount())/((double)loan.totalLentAmount()))*100);
    lblPercent.setText("Loan "+ percent +"% repayed");  
    lblFRStatus.setText("$" + repAmt + " repayed. $" + (lentAmt-repAmt) + " to go.");      
    
    }else if(loan.getLoanStatus() == Loan.LoanStatus.FullyRepayed){
    lblPercent.setText("Loan fully repayed");
    lblFRStatus.setText("$" + repAmt + " repayed. $0 to go.");      
    }
    lblStatus.setText(loan.getLoanStatus().getValue());        
    }
    
    private void populateTblRepaymentList() {
        DefaultTableModel model = (DefaultTableModel)tblRepaymentList.getModel();
        model.setRowCount(0);
        
        for(RepaymentInstance repaymentInstance : loan.getRepaymentInstanceList()){
            Object[] row = new Object[2] ;
            row[0] = repaymentInstance.getDate();
            row[1] = repaymentInstance.getRepaymentAmount();
            model.addRow(row);
        }        
    }    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLenderList = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        lblPercent = new javax.swing.JLabel();
        lblFRStatus = new javax.swing.JLabel();
        lblLenderNo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRepaymentList = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 153, 0));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("  LOAN CASE STATUS  ");
        jLabel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 4, true));

        tblLenderList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lender", "Amount Received"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblLenderList);
        if (tblLenderList.getColumnModel().getColumnCount() > 0) {
            tblLenderList.getColumnModel().getColumn(0).setResizable(false);
            tblLenderList.getColumnModel().getColumn(1).setResizable(false);
        }

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<< BACK ");
        btnBack.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 4, true));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblStatus.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(255, 255, 255));
        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatus.setText("Loan status");

        lblPercent.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        lblPercent.setForeground(new java.awt.Color(255, 255, 255));
        lblPercent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPercent.setText("Percent funded");

        lblFRStatus.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        lblFRStatus.setForeground(new java.awt.Color(255, 255, 255));
        lblFRStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFRStatus.setText("Funding / Repayment status");

        lblLenderNo.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        lblLenderNo.setForeground(new java.awt.Color(255, 255, 255));
        lblLenderNo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLenderNo.setText("Powered by lenders");

        tblRepaymentList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Repayment Date", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblRepaymentList);
        if (tblRepaymentList.getColumnModel().getColumnCount() > 0) {
            tblRepaymentList.getColumnModel().getColumn(0).setResizable(false);
            tblRepaymentList.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Lending Instances");
        jLabel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 4, true));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Repayment Instances");
        jLabel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 4, true));

        jLabel5.setIcon(new javax.swing.ImageIcon("/Users/karandutt/Documents/Java Swing/FINAL/kivafull.jpeg")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(395, 395, 395)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jLabel2)
                                .addGap(31, 31, 31))
                            .addComponent(lblPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFRStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLenderNo, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addGap(27, 27, 27)
                .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblFRStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblLenderNo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(93, 93, 93)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
                userProcessContainer.remove(this);
        int length = userProcessContainer.getComponentCount();
        BorrowerWorkAreaJPanel awajp = (BorrowerWorkAreaJPanel) userProcessContainer.getComponent(length-1);
        awajp.populateCreditComboBox();   
        awajp.populateCurrentBalance();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFRStatus;
    private javax.swing.JLabel lblLenderNo;
    private javax.swing.JLabel lblPercent;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTable tblLenderList;
    private javax.swing.JTable tblRepaymentList;
    // End of variables declaration//GEN-END:variables


}
